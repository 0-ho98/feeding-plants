{"version":3,"sources":["routes/AddingPlants.js","routes/Auth.js","routes/Home.js","routes/Profile.js","routes/Signup.js","components/Header.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["useStyles","makeStyles","theme","root","padding","spacing","textAlign","form","margin","display","flexFlow","alignItems","text","width","currentFileName","submitButton","marginTop","AddingPlants","props","classes","useState","plantName","setPlantName","plantType","setPlantType","waterCycle","setWaterCycle","origin","setOrigin","isFile","setIsFile","fileName","setFileName","setFile","useEffect","document","title","Paper","className","TextField","id","label","variant","value","onChange","event","target","required","Button","component","color","type","hidden","name","files","justifyContent","buttons","checkboxContainer","fontSize","Auth","history","useHistory","confirm","setConfirm","userId","setUserId","userPassword","setUserPassword","isRemember","setIsRemember","useCookies","cookies","setCookie","removeCookie","handleFormSubmit","a","preventDefault","axios","post","then","data","JSON","parse","userData","console","log","undefined","rememberId","push","onSubmit","checked","maxAge","onClick","Home","isLogin","src","alt","container","maxWidth","background","info","fontFamily","button","Profile","buttonValue","setButtonValue","Alert","severity","input","Signup","userName","setUserName","passwordCheck","setPasswordCheck","passwordDigitsError","setPasswordDigitsError","eMail","setEmail","birthday","setBirthday","gender","setGender","idError","passwordError","setPasswordError","length","textField","InputLabelProps","shrink","FormControl","formControl","InputLabel","Select","labelId","MenuItem","Header","to","bottom","left","position","zIndex","Navigation","setValue","BottomNavigation","newValue","showLabels","BottomNavigationAction","icon","MyRouter","setIsLogin","exact","path","App","Date","getFullYear","ReactDOM","render","CookiesProvider","getElementById"],"mappings":"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","file":"static/js/main.17fae327.chunk.js","sourcesContent":["import { Button, makeStyles, Paper, TextField } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(1),\r\n    \"& > * \": {\r\n      textAlign: \"center\",\r\n    },\r\n  },\r\n  form: {\r\n    \"& > * \": {\r\n      margin: theme.spacing(0.5)\r\n    },\r\n    display: \"flex\",\r\n    flexFlow: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  text: {\r\n    width: \"30ch\",\r\n  },\r\n  currentFileName:{\r\n    margin: theme.spacing(2)\r\n  },\r\n  submitButton: {\r\n    marginTop: theme.spacing(6)\r\n  }\r\n}));\r\n\r\nconst AddingPlants = (props) => {\r\n  const classes = useStyles();\r\n  const [plantName, setPlantName] = useState(\"\");\r\n  const [plantType, setPlantType] = useState(\"\");\r\n  const [waterCycle, setWaterCycle] = useState(\"\");\r\n  const [origin, setOrigin] = useState(\"\");\r\n  const [isFile, setIsFile] = useState(false);\r\n  const [fileName, setFileName] = useState(\"\");\r\n  const [file, setFile] = useState(null);\r\n\r\n  useEffect(() => {\r\n    document.title = \"애완식물 추가\";\r\n  }, []);\r\n\r\n  const handleFileChange = (event) => {\r\n    const {name} = event.target.files[0];\r\n    setFileName(name);\r\n    setFile(event.target.files[0]);\r\n    setIsFile(true);\r\n  };\r\n\r\n  const changePlantName = (event) => {\r\n    const {target: {value}} = event;\r\n    setPlantName(value);\r\n  }\r\n  const changePlantType = (event) => {\r\n    const {target: {value}} = event;\r\n    setPlantType(value);\r\n  }\r\n  const changeWaterCycle = (event) => {\r\n    const {target: {value}} = event;\r\n    setWaterCycle(value);\r\n  }\r\n  const changeOrigin = (event) => {\r\n    const {target: {value}} = event;\r\n    setOrigin(value);\r\n  }\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <h2>식물 정보 입력하기</h2>\r\n      <form className={classes.form}>\r\n        <TextField\r\n          className={classes.text}\r\n          id=\"outlined-basic\"\r\n          label=\"식물 이름\"\r\n          variant=\"outlined\"\r\n          value={plantName}\r\n          onChange={changePlantName}\r\n          required\r\n        />\r\n        <TextField\r\n          className={classes.text}\r\n          id=\"outlined-basic\"\r\n          label=\"식물 종류\"\r\n          variant=\"outlined\"\r\n          value={plantType}\r\n          onChange={changePlantType}\r\n          required\r\n        />\r\n        <TextField\r\n          className={classes.text}\r\n          id=\"outlined-basic\"\r\n          label=\"하루 물 주기 빈도\"\r\n          variant=\"outlined\"\r\n          value={waterCycle}\r\n          onChange={changeWaterCycle}\r\n          required\r\n        />\r\n        <TextField\r\n          className={classes.text}\r\n          id=\"outlined-basic\"\r\n          label=\"원산지\"\r\n          variant=\"outlined\"\r\n          value={origin}\r\n          onChange={changeOrigin}\r\n          required\r\n        />\r\n        <p className={classes.currentFileName}>{isFile ? `파일 이름: ${fileName}` : \"사진을 올려주세요\"}</p>\r\n        <Button variant=\"contained\" component=\"label\" color=\"primary\">\r\n          식물 사진 올리기\r\n          <input type=\"file\" hidden onChange={handleFileChange} />\r\n        </Button>\r\n        <Button className={classes.submitButton} variant=\"contained\" component=\"label\" color=\"secondary\">\r\n          제출하기\r\n        </Button>\r\n      </form>\r\n    </Paper>\r\n  );\r\n};\r\nexport default AddingPlants;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Paper } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexFlow: \"column\",\r\n    justifyContent: \"center\",\r\n    padding: theme.spacing(3),\r\n  },\r\n  form: {\r\n    display: \"flex\",\r\n    flexFlow: \"column\",\r\n    alignItems: \"center\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(0.5),\r\n    },\r\n  },\r\n  text: {\r\n    width: \"30ch\",\r\n  },\r\n  buttons: {\r\n    width: \"30ch\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-evenly\",\r\n    \"& > *\": {\r\n      width: \"48%\",\r\n    },\r\n  },\r\n  checkboxContainer:{\r\n    width: \"30ch\",\r\n    \"& > *\": {\r\n      fontSize: \"12px\"\r\n    },\r\n    \r\n  }\r\n}));\r\n\r\nconst Auth = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [confirm, setConfirm] = useState(\"\");\r\n  const [userId, setUserId] = useState(\"\");\r\n  const [userPassword, setUserPassword] = useState(\"\");\r\n  const [isRemember, setIsRemember] = useState(false);\r\n  const [cookies, setCookie, removeCookie] = useCookies([\"rememberId\"]);\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const data = await axios\r\n        .post(\"/login\", {\r\n          userId,\r\n          userPassword,\r\n        })\r\n        .then(() => {\r\n          setConfirm(false);\r\n        });\r\n      const userData = await JSON.parse(data);\r\n      if (userData.userId !== userId) {\r\n        console.log(\"없는 아이디 입니다.\");\r\n      } else if (userData.userPassword !== userPassword) {\r\n        console.log(\"비밀번호가 다릅니다.\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error.name);\r\n    }\r\n  };\r\n\r\n  const changeId = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setUserId(value);\r\n  };\r\n  const changePassword = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setUserPassword(value);\r\n  };\r\n  const handleCheckbox = (event) => {\r\n    const {\r\n      target: { checked },\r\n    } = event;\r\n    setIsRemember(checked);\r\n    if (checked) {\r\n      setCookie(\"rememberId\", userId, { maxAge: 2000 });\r\n    } else {\r\n      removeCookie(\"rememberId\");\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    document.title = \"로그인\";\r\n    if (cookies.rememberId !== undefined) {\r\n      setUserId(cookies.rememberId);\r\n      setIsRemember(true);\r\n    }\r\n    \r\n    if (confirm) {\r\n      history.push(\"/\");\r\n    } else if (confirm === false) {\r\n      history.push(\"/profile\");\r\n    }\r\n  }, [confirm]);\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <form className={classes.form} onSubmit={handleFormSubmit}>\r\n        <h2>로그인</h2>\r\n        <TextField\r\n          className={classes.text}\r\n          id=\"outlined-basic\"\r\n          label=\"아이디\"\r\n          variant=\"outlined\"\r\n          value={userId}\r\n          onChange={changeId}\r\n          required\r\n        />\r\n        <TextField\r\n          className={classes.text}\r\n          id=\"outlined-basic\"\r\n          label=\"비밀번호\"\r\n          variant=\"outlined\"\r\n          type=\"password\"\r\n          value={userPassword}\r\n          onChange={changePassword}\r\n          required\r\n        />\r\n        <div className={classes.checkboxContainer}>\r\n          <input\r\n            type=\"checkbox\"\r\n            onChange={handleCheckbox}\r\n            checked={isRemember}\r\n          />\r\n          <span>아이디 저장하기</span>\r\n        </div>\r\n        <div className={classes.buttons}>\r\n          <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n            확인\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            onClick={() => {\r\n              setConfirm(false);\r\n            }}\r\n          >\r\n            취소\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </Paper>\r\n  );\r\n};\r\nexport default Auth;\r\n","import React,{useEffect} from \"react\";\r\nimport \"routes/Home.css\"\r\nconst Home = (props) => {\r\n  const { isLogin } = props;\r\n  console.log(isLogin);\r\n  useEffect(() => {\r\n    document.title=\"홈\";\r\n  }, [])\r\n  return (\r\n    <main>\r\n      <section className=\"firstSection\">\r\n        <div className=\"imageContainer\">\r\n          <img src=\"https://cdn.pixabay.com/photo/2018/03/04/09/51/space-3197611_1280.jpg\" alt=\"식물과 벽의 조화\" />\r\n        </div>\r\n      </section>\r\n      {isLogin ? (\r\n        <section className=\"loginHome\">로그인 됨</section>\r\n      ) : (\r\n        <section className=\"nomemberHome\">\r\n          <p>\r\n            Feeding Plants는 애완식물을 키우는 사람들을 위해 만들어졌습니다.\r\n          </p>\r\n        </section>\r\n      )}\r\n    </main>\r\n  );\r\n};\r\nexport default Home;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {useHistory} from \"react-router-dom\"\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport { Paper } from \"@material-ui/core\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    maxWidth: \"500px\",\r\n    margin: theme.spacing(8, 0, 0, 0),\r\n    padding: theme.spacing(5, 1, 5, 1),\r\n    background: \"#fffffe\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(2),\r\n    },\r\n  },\r\n  info: {\r\n    fontFamily: \"Nanum Gothic,sans-serif\",\r\n  },\r\n  button: {\r\n    margin: theme.spacing(3, 0, 0, 0),\r\n    display: \"flex\",\r\n    justifyContent: \"space-evenly\",\r\n    \"& > *\": {\r\n      width: \"30%\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst Profile = (props) => {\r\n  const { isLogin } = props;\r\n  const [buttonValue, setButtonValue] = useState(\"\");\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n\r\n  useEffect(()=>{\r\n    document.title= \"프로필\";\r\n    if(buttonValue===\"LOGIN\"){\r\n      history.push(\"/auth\");\r\n    }else if(buttonValue===\"SIGNUP\"){\r\n      history.push(\"/signup\");\r\n    }\r\n  },[buttonValue]);\r\n  return (\r\n    <main>\r\n      <Paper>\r\n      {isLogin ? (\r\n        <div>\r\n          <div className={classes.container}>\r\n            <div>\r\n              <img src=\"\" alt=\"사용자의 사진\" />\r\n            </div>\r\n            <div>사용자의 이름</div>\r\n          </div>\r\n          <Button variant=\"contained\" color=\"secondary\">\r\n            LOGOUT\r\n          </Button>\r\n          {/* 그냥 아래 부분을 Home로 넘기자 */}\r\n          <div className={classes.container}>\r\n            <p>나의 식물 목록</p>\r\n            <div>\r\n              <img src=\"\" alt=\"사용자의 사진\" />\r\n            </div>\r\n            <div>식물의 이름</div>\r\n          </div>\r\n          \r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <div className={classes.container}>\r\n            <Alert className={classes.info} severity=\"info\">\r\n              사용자의 정보가 없습니다. 로그인 해주세요\r\n            </Alert>\r\n            <div className={classes.button}>\r\n              <Button variant=\"contained\" color=\"primary\" onClick={()=>{setButtonValue(\"LOGIN\")}}>\r\n                LOGIN\r\n              </Button>\r\n              <Button variant=\"contained\" color=\"secondary\" onClick={()=>{setButtonValue(\"SIGNUP\")}}>\r\n                SIGNUP\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      </Paper>\r\n    </main>\r\n  );\r\n};\r\nexport default Profile;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { Paper } from \"@material-ui/core\";\r\nimport { TramRounded } from \"@material-ui/icons\";\r\nimport axios from \"axios\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  form: {\r\n    display: \"flex\",\r\n    flexFlow: \"column\",\r\n    alignItems: \"center\",\r\n    // height: \"700px\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    width: \"29ch\",\r\n  },\r\n  buttons: {\r\n    width: \"30ch\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-evenly\",\r\n    marginTop: \"50px\",\r\n    \"& > *\": {\r\n      width: \"48%\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst Signup = () => {\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [userId, setUserId] = useState(\"\");\r\n  const [userPassword, setUserPassword] = useState(\"\");\r\n  const [passwordCheck, setPasswordCheck] = useState(\"\");\r\n  const [passwordDigitsError, setPasswordDigitsError] = useState(false);\r\n  const [eMail, setEmail] = useState(\"\");\r\n  const [birthday, setBirthday] = useState(\"\");\r\n  const [gender, setGender] = useState(\"\");\r\n  const [confirm, setConfirm] = useState(\"\");\r\n  const [idError, setIdError] = useState(false);\r\n  const [passwordError, setPasswordError] = useState(false);\r\n  useEffect(() => {\r\n    document.title = \"회원가입\";\r\n    if (confirm) {\r\n      history.push(\"/\");\r\n    } else if (confirm === false) {\r\n      history.push(\"/profile\");\r\n    }\r\n  }, [confirm]);\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      if (idError || passwordError || passwordDigitsError) {\r\n        console.log('아노딤');\r\n        return false;\r\n      } else {\r\n        const data = await axios.post(\"/Main\", {\r\n          userName,\r\n          userId,\r\n          userPassword,\r\n          eMail,\r\n          birthday,\r\n          gender,\r\n        });\r\n        const userData = await JSON.parse(data);\r\n      }\r\n    } catch (error) {\r\n      console.log(error.name);\r\n    }\r\n  };\r\n\r\n  const onChangeName = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setUserName(value);\r\n  };\r\n  const onChangeId = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setUserId(value);\r\n  };\r\n  const onChangePassword = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setUserPassword(value);\r\n    if (value.length < 8) {\r\n      setPasswordDigitsError(true);\r\n    } else {\r\n      setPasswordDigitsError(false);\r\n    }\r\n    if(passwordCheck !== value){\r\n      setPasswordError(true);\r\n    }\r\n  };\r\n  const onChangePasswordCheck = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    if (userPassword === value) {\r\n      setPasswordError(false);\r\n      setPasswordCheck(value);\r\n    } else {\r\n      setPasswordError(true);\r\n      setPasswordCheck(value);\r\n    }\r\n  };\r\n  const onChangeEmail = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setEmail(value);\r\n  };\r\n  const onChangeBirthday = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setBirthday(value);\r\n  };\r\n  const onChangeGender = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setGender(value);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <form\r\n        onSubmit={handleFormSubmit}\r\n        className={classes.form}\r\n        onSubmit={handleFormSubmit}\r\n        autoComplete=\"off\"\r\n      >\r\n        <h1>회원가입</h1>\r\n        <TextField\r\n          id=\"outlined-basic1\"\r\n          label=\"이름\"\r\n          variant=\"outlined\"\r\n          name=\"userName\"\r\n          value={userName}\r\n          onChange={onChangeName}\r\n          className={classes.input}\r\n          required\r\n        />\r\n        <TextField\r\n          id=\"outlined-basic2\"\r\n          label=\"아이디\"\r\n          variant=\"outlined\"\r\n          name=\"userId\"\r\n          value={userId}\r\n          onChange={onChangeId}\r\n          className={classes.input}\r\n          required\r\n        />\r\n        {/* {idError && <Alert severity=\"error\">아이디가 중복됩니다.</Alert>} */}\r\n        <TextField\r\n          id=\"outlined-basic3\"\r\n          label=\"비밀번호\"\r\n          type=\"password\"\r\n          variant=\"outlined\"\r\n          name=\"userPassword\"\r\n          value={userPassword}\r\n          onChange={onChangePassword}\r\n          className={classes.input}\r\n          required\r\n        />\r\n        {passwordDigitsError ? (\r\n          <Alert severity=\"error\">\r\n            문자, 숫자, 기호를 조합하여 8자 이상을 사용하세요\r\n          </Alert>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <TextField\r\n          id=\"outlined-basic4\"\r\n          label=\"비민번호 확인\"\r\n          type=\"password\"\r\n          variant=\"outlined\"\r\n          name=\"userPasswordConfirm\"\r\n          value={passwordCheck}\r\n          onChange={onChangePasswordCheck}\r\n          className={classes.input}\r\n          required\r\n        />\r\n        {passwordError && (\r\n          <Alert severity=\"error\">비밀번호를 동일하게 입력해주세요.</Alert>\r\n        )}\r\n        <TextField\r\n          id=\"outlined-basic5\"\r\n          label=\"이메일\"\r\n          type=\"email\"\r\n          variant=\"outlined\"\r\n          name=\"eMail\"\r\n          value={eMail}\r\n          onChange={onChangeEmail}\r\n          className={classes.input}\r\n          required\r\n        />\r\n        <TextField\r\n          id=\"date\"\r\n          label=\"생년월일\"\r\n          name=\"birthday\"\r\n          type=\"date\"\r\n          value={birthday}\r\n          className={classes.textField}\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n          onChange={onChangeBirthday}\r\n          className={classes.input}\r\n          required\r\n        />\r\n        <FormControl className={classes.formControl} required>\r\n          <InputLabel id=\"demo-simple-select-label\">성별: </InputLabel>\r\n          <Select\r\n            labelId=\"demo-simple-select-label\"\r\n            name=\"gender\"\r\n            id=\"demo-simple-select\"\r\n            value={gender}\r\n            onChange={onChangeGender}\r\n            className={classes.input}\r\n            required\r\n          >\r\n            <MenuItem value=\"남자\">남자</MenuItem>\r\n            <MenuItem value=\"여자\">여자</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <div className={classes.buttons}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            // onClick={() => {\r\n            //   setConfirm(true);\r\n            // }}\r\n            type=\"submit\"\r\n          >\r\n            회원가입\r\n          </Button>\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            onClick={() => {\r\n              setConfirm(false);\r\n            }}\r\n          >\r\n            취소\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </Paper>\r\n  );\r\n};\r\nexport default Signup;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"components/Header.css\";\r\nconst Header = (props) => {\r\n  const { isLogin } = props;\r\n  return (\r\n    <header>\r\n      {isLogin ? (\r\n        <Link className=\"login\" to=\"/\">\r\n          <h1 className=\"loginHeader\">Feeding Plants</h1>\r\n        </Link>\r\n      ) : (\r\n        <Link className=\"nomember\" to=\"/\">\r\n          <div>\r\n            <h1 className=\"nomemberHeader1\">Feeding</h1>\r\n            <h1 className=\"nomemberHeader2\">Plants</h1>\r\n          </div>\r\n        </Link>\r\n      )}\r\n    </header>\r\n  );\r\n};\r\nexport default Header;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\r\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport PermIdentityIcon from '@material-ui/icons/PermIdentity';\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\",\r\n    bottom: 0,\r\n    left: 0,\r\n    position: \"fixed\",\r\n    background: \"white\",\r\n    zIndex: 100,\r\n  },\r\n});\r\n\r\nconst Navigation = (props) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [value, setValue] = useState(0);\r\n  const { isLogin } = props;\r\n\r\n  const handleClickInMember = () => {\r\n    if (value === 0) {\r\n      console.log(\"첫번째\");\r\n      history.push(\"/\");\r\n    } else if (value === 1) {\r\n      console.log(\"두번째\");\r\n      history.push('/adding-plants');\r\n    } else if (value === 2) {\r\n      console.log(\"세번째\");\r\n      history.push('/profile');\r\n      \r\n    }\r\n  };\r\n  const handleClickInNomember = () => {\r\n    if (value === 0) {\r\n      console.log(\"첫번째\");\r\n      history.push(\"/\");\r\n    } else if (value === 1) {\r\n      console.log(\"두번째\");\r\n      history.push('/profile');\r\n    }\r\n  }\r\n  useEffect(()=>{\r\n    if(isLogin){\r\n      handleClickInMember();\r\n    }else{\r\n      handleClickInNomember();\r\n    }\r\n    \r\n  },[value])\r\n  return (\r\n    <nav>\r\n      {isLogin ? (\r\n        <BottomNavigation\r\n          value={value}\r\n          onChange={(event, newValue) => {\r\n            setValue(newValue);\r\n          }}\r\n          showLabels\r\n          className={classes.root}\r\n        >\r\n          <BottomNavigationAction\r\n            label=\"Home\"\r\n            icon={<HomeIcon/>}\r\n          />\r\n          <BottomNavigationAction\r\n            label=\"Add Plants\"\r\n            icon={<AddIcon />}\r\n          />\r\n          <BottomNavigationAction\r\n            label=\"Profile\"\r\n            icon={<PermIdentityIcon />}\r\n          />\r\n        </BottomNavigation>\r\n      ) : (\r\n        <BottomNavigation\r\n          value={value}\r\n          onChange={(event, newValue) => {\r\n            setValue(newValue);\r\n          }}\r\n          showLabels\r\n          className={classes.root}\r\n        >\r\n          <BottomNavigationAction\r\n            label=\"Home\"\r\n            icon={<HomeIcon/>}\r\n          />\r\n          <BottomNavigationAction\r\n            label=\"Profile\"\r\n            icon={<PermIdentityIcon />}\r\n          />\r\n        </BottomNavigation>\r\n      )}\r\n    </nav>\r\n  );\r\n};\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport { Route, BrowserRouter, Switch } from \"react-router-dom\";\r\nimport AddingPlants from \"routes/AddingPlants\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Signup from \"routes/Signup\";\r\nimport Header from \"./Header\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nconst MyRouter = (props) => {\r\n  const {isLogin, setIsLogin} = props;\r\n  return (\r\n    <BrowserRouter>\r\n      <div className=\"initialBlock\">\r\n        <Header isLogin={isLogin} />\r\n        <Navigation isLogin={isLogin} />\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Home isLogin={isLogin} />\r\n          </Route>\r\n          <Route exact path=\"/auth\">\r\n            <Auth />\r\n          </Route>\r\n          <Route exact path=\"/signup\">\r\n            <Signup/>\r\n          </Route>\r\n          <Route exact path=\"/profile\">\r\n            <Profile isLogin={isLogin} />\r\n          </Route>\r\n          <Route exact path=\"/adding-plants\">\r\n            <AddingPlants isLogin={isLogin} />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n};\r\nexport default MyRouter;\r\n","import React, { useState } from \"react\";\nimport MyRouter from \"components/Router\";\nconst App = () => {\n  const [isLogin, setIsLogin] = useState(false);\n  return (\n    <div className=\"App\">\n      <MyRouter isLogin={isLogin} setIsLogin={setIsLogin} />\n      {isLogin ? (\n        <button onClick={() => setIsLogin(false)}>\n          로그아웃 했을 때로 바꾸기\n        </button>\n      ) : (\n        <button onClick={() => setIsLogin(true)}>\n          로그인 했을 때로 바꾸기\n        </button>\n      )}\n      <footer>\n        {/* footer css는 index.css에 있음 */}\n        <hr />\n        <div>&copy; {new Date().getFullYear()} 박백김하</div>\n      </footer>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\nimport \"index.css\";\nimport { CookiesProvider } from \"react-cookie\";\n\nReactDOM.render(\n  <CookiesProvider>\n    <App />\n  </CookiesProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}