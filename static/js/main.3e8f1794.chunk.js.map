{"version":3,"sources":["routes/AddingPlants.js","routes/Auth.js","routes/Home.js","routes/Profile.js","routes/Signup.js","components/Header.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["AddingPlants","useEffect","document","title","useStyles","makeStyles","theme","root","display","flexFlow","justifyContent","padding","spacing","form","alignItems","margin","text","width","buttons","Auth","classes","history","useHistory","useState","confirm","setConfirm","userId","setUserId","userPassword","setUserPassword","handleFormSubmit","event","a","preventDefault","axios","post","then","data","JSON","parse","userData","console","log","name","push","Paper","className","onSubmit","TextField","id","label","variant","value","onChange","target","required","type","Button","color","onClick","Home","props","isLogin","src","alt","container","maxWidth","background","info","fontFamily","button","Profile","buttonValue","setButtonValue","Alert","severity","input","marginTop","Signup","userName","setUserName","passwordCheck","setPasswordCheck","passwordDigitsError","setPasswordDigitsError","eMail","setEmail","birthday","setBirthday","gender","setGender","idError","passwordError","setPasswordError","length","textField","InputLabelProps","shrink","FormControl","formControl","InputLabel","Select","labelId","MenuItem","Header","to","bottom","left","position","zIndex","Navigation","setValue","BottomNavigation","newValue","showLabels","BottomNavigationAction","icon","MyRouter","exact","path","App","Date","getFullYear","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.3e8f1794.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\n\r\nconst AddingPlants = () => {\r\n    useEffect(() => {\r\n        document.title = \"애완식물 추가\";\r\n    },[])\r\n    return(\r\n        <div>여기는 AddingPlants입니다.</div>\r\n    )\r\n}\r\nexport default AddingPlants;","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Paper } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexFlow: \"column\",\r\n    justifyContent: \"center\",\r\n    padding: theme.spacing(3),\r\n  },\r\n  form: {\r\n    display: \"flex\",\r\n    flexFlow: \"column\",\r\n    alignItems: \"center\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(0.5),\r\n    },\r\n  },\r\n  text: {\r\n    width: \"30ch\",\r\n  },\r\n  buttons: {\r\n    width: \"30ch\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-evenly\",\r\n    \"& > *\": {\r\n      width: \"48%\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst Auth = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [confirm, setConfirm] = useState(\"\");\r\n  const [userId, setUserId] = useState(\"\");\r\n  const [userPassword, setUserPassword] = useState(\"\");\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const data = await axios\r\n      .post(\"/login\", {\r\n        userId,\r\n        userPassword,\r\n      })\r\n      .then(() => {\r\n        setConfirm(false);\r\n      });\r\n      const userData = await JSON.parse(data);\r\n      if(userData.userId !== userId){\r\n        console.log('없는 아이디 입니다.')\r\n      }else if(userData.userPassword !== userPassword){\r\n        console.log('비밀번호가 다릅니다.');\r\n      }\r\n    } catch (error) {\r\n      console.log(error.name);\r\n    }\r\n  };\r\n\r\n  const changeId = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setUserId(value);\r\n  };\r\n  const changePassword = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setUserPassword(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.title= \"로그인\";\r\n    if (confirm) {\r\n      history.push(\"/\");\r\n    } else if (confirm === false) {\r\n      history.push(\"/profile\");\r\n    }\r\n  }, [confirm]);\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <form className={classes.form} onSubmit={handleFormSubmit}>\r\n        <h2>로그인</h2>\r\n        <TextField\r\n          className={classes.text}\r\n          id=\"outlined-basic\"\r\n          label=\"아이디\"\r\n          variant=\"outlined\"\r\n          value={userId}\r\n          onChange={changeId}\r\n          required\r\n        />\r\n        <TextField\r\n          className={classes.text}\r\n          id=\"outlined-basic\"\r\n          label=\"비밀번호\"\r\n          variant=\"outlined\"\r\n          type=\"password\"\r\n          value={userPassword}\r\n          onChange={changePassword}\r\n          required\r\n        />\r\n        <div className={classes.buttons}>\r\n          <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n            확인\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            onClick={() => {\r\n              setConfirm(false);\r\n            }}\r\n          >\r\n            취소\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </Paper>\r\n  );\r\n};\r\nexport default Auth;\r\n","import React,{useEffect} from \"react\";\r\nimport \"routes/Home.css\"\r\nconst Home = (props) => {\r\n  const { isLogin } = props;\r\n  console.log(isLogin);\r\n  useEffect(() => {\r\n    document.title=\"홈\";\r\n  }, [])\r\n  return (\r\n    <main>\r\n      <section className=\"firstSection\">\r\n        <div className=\"imageContainer\">\r\n          <img src=\"https://cdn.pixabay.com/photo/2018/03/04/09/51/space-3197611_1280.jpg\" alt=\"식물과 벽의 조화\" />\r\n        </div>\r\n      </section>\r\n      {isLogin ? (\r\n        <section className=\"loginHome\">로그인 됨</section>\r\n      ) : (\r\n        <section className=\"nomemberHome\">\r\n          <p>\r\n            Feeding Plants는 애완식물을 키우는 사람들을 위해 만들어졌습니다.\r\n          </p>\r\n        </section>\r\n      )}\r\n    </main>\r\n  );\r\n};\r\nexport default Home;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {useHistory} from \"react-router-dom\"\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport { Paper } from \"@material-ui/core\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    maxWidth: \"500px\",\r\n    margin: theme.spacing(8, 0, 0, 0),\r\n    padding: theme.spacing(5, 1, 5, 1),\r\n    background: \"#fffffe\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(2),\r\n    },\r\n  },\r\n  info: {\r\n    fontFamily: \"Nanum Gothic,sans-serif\",\r\n  },\r\n  button: {\r\n    margin: theme.spacing(3, 0, 0, 0),\r\n    display: \"flex\",\r\n    justifyContent: \"space-evenly\",\r\n    \"& > *\": {\r\n      width: \"30%\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst Profile = (props) => {\r\n  const { isLogin } = props;\r\n  const [buttonValue, setButtonValue] = useState(\"\");\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n\r\n  useEffect(()=>{\r\n    document.title= \"프로필\";\r\n    if(buttonValue===\"LOGIN\"){\r\n      history.push(\"/auth\");\r\n    }else if(buttonValue===\"SIGNUP\"){\r\n      history.push(\"/signup\");\r\n    }\r\n  },[buttonValue]);\r\n  return (\r\n    <main>\r\n      <Paper>\r\n      {isLogin ? (\r\n        <div>\r\n          <div className={classes.container}>\r\n            <div>\r\n              <img src=\"\" alt=\"사용자의 사진\" />\r\n            </div>\r\n            <div>사용자의 이름</div>\r\n          </div>\r\n          <Button variant=\"contained\" color=\"secondary\">\r\n            LOGOUT\r\n          </Button>\r\n          {/* 그냥 아래 부분을 Home로 넘기자 */}\r\n          <div className={classes.container}>\r\n            <p>나의 식물 목록</p>\r\n            <div>\r\n              <img src=\"\" alt=\"사용자의 사진\" />\r\n            </div>\r\n            <div>식물의 이름</div>\r\n          </div>\r\n          \r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <div className={classes.container}>\r\n            <Alert className={classes.info} severity=\"info\">\r\n              사용자의 정보가 없습니다. 로그인 해주세요\r\n            </Alert>\r\n            <div className={classes.button}>\r\n              <Button variant=\"contained\" color=\"primary\" onClick={()=>{setButtonValue(\"LOGIN\")}}>\r\n                LOGIN\r\n              </Button>\r\n              <Button variant=\"contained\" color=\"secondary\" onClick={()=>{setButtonValue(\"SIGNUP\")}}>\r\n                SIGNUP\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      </Paper>\r\n    </main>\r\n  );\r\n};\r\nexport default Profile;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { Paper } from \"@material-ui/core\";\r\nimport { TramRounded } from \"@material-ui/icons\";\r\nimport axios from \"axios\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  form: {\r\n    display: \"flex\",\r\n    flexFlow: \"column\",\r\n    alignItems: \"center\",\r\n    // height: \"700px\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    width: \"29ch\",\r\n  },\r\n  buttons: {\r\n    width: \"30ch\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-evenly\",\r\n    marginTop: \"50px\",\r\n    \"& > *\": {\r\n      width: \"48%\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst Signup = () => {\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [userId, setUserId] = useState(\"\");\r\n  const [userPassword, setUserPassword] = useState(\"\");\r\n  const [passwordCheck, setPasswordCheck] = useState(\"\");\r\n  const [passwordDigitsError, setPasswordDigitsError] = useState(false);\r\n  const [eMail, setEmail] = useState(\"\");\r\n  const [birthday, setBirthday] = useState(\"\");\r\n  const [gender, setGender] = useState(\"\");\r\n  const [confirm, setConfirm] = useState(\"\");\r\n  const [idError, setIdError] = useState(false);\r\n  const [passwordError, setPasswordError] = useState(false);\r\n  useEffect(() => {\r\n    document.title = \"회원가입\";\r\n    if (confirm) {\r\n      history.push(\"/\");\r\n    } else if (confirm === false) {\r\n      history.push(\"/profile\");\r\n    }\r\n  }, [confirm]);\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      if (idError || passwordError || passwordDigitsError) {\r\n        console.log('아노딤');\r\n        return false;\r\n      } else {\r\n        const data = await axios.post(\"/Main\", {\r\n          userName,\r\n          userId,\r\n          userPassword,\r\n          eMail,\r\n          birthday,\r\n          gender,\r\n        });\r\n        const userData = await JSON.parse(data);\r\n      }\r\n    } catch (error) {\r\n      console.log(error.name);\r\n    }\r\n  };\r\n\r\n  const onChangeName = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setUserName(value);\r\n  };\r\n  const onChangeId = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setUserId(value);\r\n  };\r\n  const onChangePassword = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setUserPassword(value);\r\n    if (value.length < 8) {\r\n      setPasswordDigitsError(true);\r\n    } else {\r\n      setPasswordDigitsError(false);\r\n    }\r\n    if(passwordCheck !== value){\r\n      setPasswordError(true);\r\n    }\r\n  };\r\n  const onChangePasswordCheck = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    if (userPassword === value) {\r\n      setPasswordError(false);\r\n      setPasswordCheck(value);\r\n    } else {\r\n      setPasswordError(true);\r\n      setPasswordCheck(value);\r\n    }\r\n  };\r\n  const onChangeEmail = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setEmail(value);\r\n  };\r\n  const onChangeBirthday = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setBirthday(value);\r\n  };\r\n  const onChangeGender = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setGender(value);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <form\r\n        onSubmit={handleFormSubmit}\r\n        className={classes.form}\r\n        onSubmit={handleFormSubmit}\r\n        autoComplete=\"off\"\r\n      >\r\n        <h1>회원가입</h1>\r\n        <TextField\r\n          id=\"outlined-basic1\"\r\n          label=\"이름\"\r\n          variant=\"outlined\"\r\n          name=\"userName\"\r\n          value={userName}\r\n          onChange={onChangeName}\r\n          className={classes.input}\r\n          required\r\n        />\r\n        <TextField\r\n          id=\"outlined-basic2\"\r\n          label=\"아이디\"\r\n          variant=\"outlined\"\r\n          name=\"userId\"\r\n          value={userId}\r\n          onChange={onChangeId}\r\n          className={classes.input}\r\n          required\r\n        />\r\n        {/* {idError && <Alert severity=\"error\">아이디가 중복됩니다.</Alert>} */}\r\n        <TextField\r\n          id=\"outlined-basic3\"\r\n          label=\"비밀번호\"\r\n          type=\"password\"\r\n          variant=\"outlined\"\r\n          name=\"userPassword\"\r\n          value={userPassword}\r\n          onChange={onChangePassword}\r\n          className={classes.input}\r\n          required\r\n        />\r\n        {passwordDigitsError ? (\r\n          <Alert severity=\"error\">\r\n            문자, 숫자, 기호를 조합하여 8자 이상을 사용하세요\r\n          </Alert>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <TextField\r\n          id=\"outlined-basic4\"\r\n          label=\"비민번호 확인\"\r\n          type=\"password\"\r\n          variant=\"outlined\"\r\n          name=\"userPasswordConfirm\"\r\n          value={passwordCheck}\r\n          onChange={onChangePasswordCheck}\r\n          className={classes.input}\r\n          required\r\n        />\r\n        {passwordError && (\r\n          <Alert severity=\"error\">비밀번호를 동일하게 입력해주세요.</Alert>\r\n        )}\r\n        <TextField\r\n          id=\"outlined-basic5\"\r\n          label=\"이메일\"\r\n          type=\"email\"\r\n          variant=\"outlined\"\r\n          name=\"eMail\"\r\n          value={eMail}\r\n          onChange={onChangeEmail}\r\n          className={classes.input}\r\n          required\r\n        />\r\n        <TextField\r\n          id=\"date\"\r\n          label=\"생년월일\"\r\n          name=\"birthday\"\r\n          type=\"date\"\r\n          value={birthday}\r\n          className={classes.textField}\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n          onChange={onChangeBirthday}\r\n          className={classes.input}\r\n          required\r\n        />\r\n        <FormControl className={classes.formControl} required>\r\n          <InputLabel id=\"demo-simple-select-label\">성별: </InputLabel>\r\n          <Select\r\n            labelId=\"demo-simple-select-label\"\r\n            name=\"gender\"\r\n            id=\"demo-simple-select\"\r\n            value={gender}\r\n            onChange={onChangeGender}\r\n            className={classes.input}\r\n            required\r\n          >\r\n            <MenuItem value=\"남자\">남자</MenuItem>\r\n            <MenuItem value=\"여자\">여자</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <div className={classes.buttons}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            // onClick={() => {\r\n            //   setConfirm(true);\r\n            // }}\r\n            type=\"submit\"\r\n          >\r\n            회원가입\r\n          </Button>\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            onClick={() => {\r\n              setConfirm(false);\r\n            }}\r\n          >\r\n            취소\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </Paper>\r\n  );\r\n};\r\nexport default Signup;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"components/Header.css\";\r\nconst Header = (props) => {\r\n  const { isLogin } = props;\r\n  return (\r\n    <header>\r\n      {isLogin ? (\r\n        <Link className=\"login\" to=\"/\">\r\n          <h1 className=\"loginHeader\">Feeding Plants</h1>\r\n        </Link>\r\n      ) : (\r\n        <Link className=\"nomember\" to=\"/\">\r\n          <div>\r\n            <h1 className=\"nomemberHeader1\">Feeding</h1>\r\n            <h1 className=\"nomemberHeader2\">Plants</h1>\r\n          </div>\r\n        </Link>\r\n      )}\r\n    </header>\r\n  );\r\n};\r\nexport default Header;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\r\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport PermIdentityIcon from '@material-ui/icons/PermIdentity';\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\",\r\n    bottom: 0,\r\n    left: 0,\r\n    position: \"fixed\",\r\n    background: \"white\",\r\n    zIndex: 100,\r\n  },\r\n});\r\n\r\nconst Navigation = (props) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [value, setValue] = useState(0);\r\n  const { isLogin } = props;\r\n\r\n  const handleClickInMember = () => {\r\n    if (value === 0) {\r\n      console.log(\"첫번째\");\r\n      history.push(\"/\");\r\n    } else if (value === 1) {\r\n      console.log(\"두번째\");\r\n      history.push('/adding-plants');\r\n    } else if (value === 2) {\r\n      console.log(\"세번째\");\r\n      history.push('/profile');\r\n      \r\n    }\r\n  };\r\n  const handleClickInNomember = () => {\r\n    if (value === 0) {\r\n      console.log(\"첫번째\");\r\n      history.push(\"/\");\r\n    } else if (value === 1) {\r\n      console.log(\"두번째\");\r\n      history.push('/profile');\r\n    }\r\n  }\r\n  useEffect(()=>{\r\n    if(isLogin){\r\n      handleClickInMember();\r\n    }else{\r\n      handleClickInNomember();\r\n    }\r\n    \r\n  },[value])\r\n  return (\r\n    <nav>\r\n      {isLogin ? (\r\n        <BottomNavigation\r\n          value={value}\r\n          onChange={(event, newValue) => {\r\n            setValue(newValue);\r\n          }}\r\n          showLabels\r\n          className={classes.root}\r\n        >\r\n          <BottomNavigationAction\r\n            label=\"Home\"\r\n            icon={<HomeIcon/>}\r\n          />\r\n          <BottomNavigationAction\r\n            label=\"Add Plants\"\r\n            icon={<AddIcon />}\r\n          />\r\n          <BottomNavigationAction\r\n            label=\"Profile\"\r\n            icon={<PermIdentityIcon />}\r\n          />\r\n        </BottomNavigation>\r\n      ) : (\r\n        <BottomNavigation\r\n          value={value}\r\n          onChange={(event, newValue) => {\r\n            setValue(newValue);\r\n          }}\r\n          showLabels\r\n          className={classes.root}\r\n        >\r\n          <BottomNavigationAction\r\n            label=\"Home\"\r\n            icon={<HomeIcon/>}\r\n          />\r\n          <BottomNavigationAction\r\n            label=\"Profile\"\r\n            icon={<PermIdentityIcon />}\r\n          />\r\n        </BottomNavigation>\r\n      )}\r\n    </nav>\r\n  );\r\n};\r\nexport default Navigation;\r\n","import React, { useState } from \"react\";\r\nimport { Route, BrowserRouter, Switch } from \"react-router-dom\";\r\nimport AddingPlants from \"routes/AddingPlants\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Signup from \"routes/Signup\";\r\nimport Header from \"./Header\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nconst MyRouter = () => {\r\n  const [isLogin, setIsLogin] = useState(false);\r\n  return (\r\n    <BrowserRouter>\r\n      <div className=\"initialBlock\">\r\n        <Header isLogin={isLogin} />\r\n        <Navigation isLogin={isLogin} />\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Home isLogin={isLogin} />\r\n          </Route>\r\n          <Route exact path=\"/auth\">\r\n            <Auth />\r\n          </Route>\r\n          <Route exact path=\"/signup\">\r\n            <Signup/>\r\n          </Route>\r\n          <Route exact path=\"/profile\">\r\n            <Profile isLogin={isLogin} />\r\n          </Route>\r\n          <Route exact path=\"/adding-plants\">\r\n            <AddingPlants />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n};\r\nexport default MyRouter;\r\n","import React from \"react\"\nimport MyRouter from \"components/Router\";\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <MyRouter/>\n      <footer>\n        {/* footer css는 index.css에 있음 */}\n        <hr/>\n      <div>&copy; {new Date().getFullYear()} 박백김하</div>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport \"index.css\";\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}