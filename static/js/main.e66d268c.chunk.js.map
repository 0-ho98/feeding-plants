{"version":3,"sources":["routes/AddingPlants.js","routes/Auth.js","routes/Home.js","routes/Profile.js","routes/Signup.js","components/Header.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["AddingPlants","useStyles","makeStyles","theme","root","display","flexFlow","justifyContent","padding","spacing","form","alignItems","margin","text","width","buttons","Auth","classes","history","useHistory","useState","confirm","setConfirm","useEffect","push","Paper","className","TextField","id","label","variant","required","type","Button","color","onClick","Home","props","isLogin","console","log","src","alt","container","maxWidth","border","borderRadius","background","info","fontFamily","button","Profile","buttonValue","setButtonValue","Alert","severity","height","input","marginTop","Signup","userName","setUserName","userId","setUserId","userPassword","setUserPassword","passwordCheck","setPasswordCheck","passwordDigitsError","eMail","setEmail","birthday","setBirthday","gender","setGender","onSubmit","autoComplete","name","value","onChange","event","target","textField","InputLabelProps","shrink","FormControl","formControl","InputLabel","Select","labelId","MenuItem","Header","to","bottom","left","position","zIndex","Navigation","setValue","BottomNavigation","newValue","showLabels","BottomNavigationAction","icon","MyRouter","exact","path","App","Date","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e66d268c.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst AddingPlants = () => {\r\n    return(\r\n        <div>여기는 AddingPlants입니다.</div>\r\n    )\r\n}\r\nexport default AddingPlants;","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Paper } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexFlow: \"column\",\r\n    justifyContent: \"center\",\r\n    padding: theme.spacing(3),\r\n  },\r\n  form: {\r\n    display: \"flex\",\r\n    flexFlow: \"column\",\r\n    alignItems: \"center\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(0.5),\r\n    },\r\n    \r\n  },\r\n  text: {\r\n    width: \"30ch\",\r\n  },\r\n  buttons: {\r\n    width: \"30ch\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-evenly\",\r\n    \"& > *\": {\r\n      width: \"48%\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst Auth = () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [confirm, setConfirm] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (confirm) {\r\n      history.push(\"/\");\r\n    } else if (confirm === false) {\r\n      history.push(\"/profile\");\r\n    }\r\n  }, [confirm]);\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <form className={classes.form}>\r\n      <h2>로그인</h2>\r\n        <TextField\r\n          className={classes.text}\r\n          id=\"outlined-basic\"\r\n          label=\"아이디\"\r\n          variant=\"outlined\"\r\n          required\r\n        />\r\n        <TextField\r\n          className={classes.text}\r\n          id=\"outlined-basic\"\r\n          label=\"비밀번호\"\r\n          variant=\"outlined\"\r\n          type=\"password\"\r\n          required\r\n        />\r\n        <div className={classes.buttons}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            // onClick={() => {\r\n            //   setConfirm(true);\r\n            // }}\r\n            type=\"submit\"\r\n          >\r\n            확인\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            onClick={() => {\r\n              setConfirm(false);\r\n            }}\r\n          >\r\n            취소\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </Paper>\r\n  );\r\n};\r\nexport default Auth;\r\n","import React from \"react\";\r\nimport \"routes/Home.css\"\r\nconst Home = (props) => {\r\n  const { isLogin } = props;\r\n  console.log(isLogin);\r\n  return (\r\n    <main>\r\n      <section className=\"firstSection\">\r\n        <div className=\"imageContainer\">\r\n          <img src=\"https://cdn.pixabay.com/photo/2018/03/04/09/51/space-3197611_1280.jpg\" alt=\"식물과 벽의 조화\" />\r\n        </div>\r\n      </section>\r\n      {isLogin ? (\r\n        <section className=\"loginHome\">로그인 됨</section>\r\n      ) : (\r\n        <section className=\"nomemberHome\">\r\n          <p>\r\n            Feeding Plants는 애완식물을 키우는 사람들을 위해 만들어졌습니다.\r\n          </p>\r\n        </section>\r\n      )}\r\n    </main>\r\n  );\r\n};\r\nexport default Home;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {useHistory} from \"react-router-dom\"\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    maxWidth: \"500px\",\r\n    border: \"3px solid gray\",\r\n    margin: theme.spacing(8, 0, 0, 0),\r\n    padding: theme.spacing(5, 1, 5, 1),\r\n    borderRadius: \"5px\",\r\n    background: \"#fffffe\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(2),\r\n    },\r\n  },\r\n  info: {\r\n    fontFamily: \"Nanum Gothic,sans-serif\",\r\n  },\r\n  button: {\r\n    margin: theme.spacing(3, 0, 0, 0),\r\n    display: \"flex\",\r\n    justifyContent: \"space-evenly\",\r\n    \"& > *\": {\r\n      width: \"30%\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst Profile = (props) => {\r\n  const { isLogin } = props;\r\n  const [buttonValue, setButtonValue] = useState(\"\");\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n\r\n  useEffect(()=>{\r\n    if(buttonValue===\"LOGIN\"){\r\n      history.push(\"/auth\");\r\n    }else if(buttonValue===\"SIGNUP\"){\r\n      history.push(\"/signup\");\r\n    }\r\n  },[buttonValue]);\r\n  return (\r\n    <main>\r\n      {isLogin ? (\r\n        <div>\r\n          <div className={classes.container}>\r\n            <div>\r\n              <img src=\"\" alt=\"사용자의 사진\" />\r\n            </div>\r\n            <div>사용자의 이름</div>\r\n          </div>\r\n          <Button variant=\"contained\" color=\"secondary\">\r\n            LOGOUT\r\n          </Button>\r\n          {/* 그냥 아래 부분을 Home로 넘기자 */}\r\n          <div className={classes.container}>\r\n            <p>나의 식물 목록</p>\r\n            <div>\r\n              <img src=\"\" alt=\"사용자의 사진\" />\r\n            </div>\r\n            <div>식물의 이름</div>\r\n          </div>\r\n          \r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <div className={classes.container}>\r\n            <Alert className={classes.info} severity=\"info\">\r\n              사용자의 정보가 없습니다. 로그인 해주세요\r\n            </Alert>\r\n            <div className={classes.button}>\r\n              <Button variant=\"contained\" color=\"primary\" onClick={()=>{setButtonValue(\"LOGIN\")}}>\r\n                LOGIN\r\n              </Button>\r\n              <Button variant=\"contained\" color=\"secondary\" onClick={()=>{setButtonValue(\"SIGNUP\")}}>\r\n                SIGNUP\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </main>\r\n  );\r\n};\r\nexport default Profile;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { Paper } from \"@material-ui/core\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  form: {\r\n    display: \"flex\",\r\n    flexFlow: \"column\",\r\n    alignItems: \"center\",\r\n    height:\"700px\",\r\n    // overflow:\"scroll\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    width: \"29ch\",\r\n  },\r\n  buttons: {\r\n    width: \"30ch\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-evenly\",\r\n    marginTop:\"50px\",\r\n    \"& > *\": {\r\n      width: \"48%\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst Signup = () => {\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [userId, setUserId] = useState(\"\");\r\n  const [userPassword, setUserPassword] = useState(\"\");\r\n  const [passwordCheck, setPasswordCheck] = useState(\"\");\r\n  const [passwordDigitsError, setPasswordDigitsError] = useState(false);\r\n  const [eMail, setEmail] = useState(\"\");\r\n  const [birthday, setBirthday] = useState(\"\");\r\n  const [gender, setGender] = useState(\"\");\r\n  const [confirm, setConfirm] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (confirm) {\r\n      history.push(\"/\");\r\n    } else if (confirm === false) {\r\n      history.push(\"/profile\");\r\n    }\r\n  }, [confirm]);\r\n\r\n  const handleFormSubmit = () => {\r\n    console.log(\"handleFormSubmit\");\r\n  };\r\n\r\n  const onChangeName = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setUserName(value);\r\n  };\r\n  const onChangeId = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setUserId(value);\r\n  };\r\n  const onChangePassword = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setUserPassword(value);\r\n  };\r\n  const onChangePasswordCheck = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    if (userPassword === value) {\r\n      console.log(\"맞네\");\r\n      setPasswordCheck(value);\r\n    } else {\r\n      console.log(\"에이\");\r\n      setPasswordCheck(value);\r\n\r\n    }\r\n  };\r\n  const onChangeEmail = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setEmail(value);\r\n  };\r\n  const onChangeBirthday = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setBirthday(value);\r\n  };\r\n  const onChangeGender = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setGender(value);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <form\r\n        onSubmit={handleFormSubmit}\r\n        className={classes.form}\r\n        autoComplete=\"off\"\r\n      >\r\n        <h1>회원가입</h1>\r\n        <TextField\r\n          id=\"outlined-basic1\"\r\n          label=\"이름\"\r\n          variant=\"outlined\"\r\n          name=\"userName\"\r\n          value={userName}\r\n          onChange={onChangeName}\r\n          className={classes.input}\r\n          required\r\n        />\r\n        <TextField\r\n          id=\"outlined-basic2\"\r\n          label=\"아이디\"\r\n          variant=\"outlined\"\r\n          name=\"userId\"\r\n          value={userId}\r\n          onChange={onChangeId}\r\n          className={classes.input}\r\n          required\r\n        />\r\n        {/* {idError && <Alert severity=\"error\">아이디가 중복됩니다.</Alert>} */}\r\n        <TextField\r\n          id=\"outlined-basic3\"\r\n          label=\"비밀번호\"\r\n          type=\"password\"\r\n          variant=\"outlined\"\r\n          name=\"userPassword\"\r\n          value={userPassword}\r\n          onChange={onChangePassword}\r\n          className={classes.input}\r\n          required\r\n        />\r\n        {passwordDigitsError ? (\r\n          <Alert severity=\"error\">\r\n            문자, 숫자, 기호를 조합하여 8자 이상을 사용하세요\r\n          </Alert>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <TextField\r\n          id=\"outlined-basic4\"\r\n          label=\"비민번호 확인\"\r\n          type=\"password\"\r\n          variant=\"outlined\"\r\n          name=\"userPasswordConfirm\"\r\n          value={passwordCheck}\r\n          onChange={onChangePasswordCheck}\r\n          className={classes.input}\r\n          required\r\n        />\r\n        <TextField\r\n          id=\"outlined-basic5\"\r\n          label=\"이메일\"\r\n          type=\"email\"\r\n          variant=\"outlined\"\r\n          name=\"eMail\"\r\n          value={eMail}\r\n          onChange={onChangeEmail}\r\n          className={classes.input}\r\n          required\r\n        />\r\n        <TextField\r\n          id=\"date\"\r\n          label=\"생년월일\"\r\n          name=\"birthday\"\r\n          type=\"date\"\r\n          value={birthday}\r\n          className={classes.textField}\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n          onChange={onChangeBirthday}\r\n          className={classes.input}\r\n          required\r\n        />\r\n        <FormControl className={classes.formControl} required>\r\n          <InputLabel id=\"demo-simple-select-label\">성별: </InputLabel>\r\n          <Select\r\n            labelId=\"demo-simple-select-label\"\r\n            name=\"gender\"\r\n            id=\"demo-simple-select\"\r\n            value={gender}\r\n            onChange={onChangeGender}\r\n          className={classes.input}\r\n          required\r\n          >\r\n            <MenuItem value=\"남자\">남자</MenuItem>\r\n            <MenuItem value=\"여자\">여자</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <div className={classes.buttons}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            // onClick={() => {\r\n            //   setConfirm(true);\r\n            // }}\r\n            type=\"submit\"\r\n          >\r\n            회원가입\r\n          </Button>\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            onClick={() => {\r\n              setConfirm(false);\r\n            }}\r\n          >\r\n            취소\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </Paper>\r\n  );\r\n};\r\nexport default Signup;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"components/Header.css\";\r\nconst Header = (props) => {\r\n  const { isLogin } = props;\r\n  return (\r\n    <header>\r\n      {isLogin ? (\r\n        <Link className=\"login\" to=\"/\">\r\n          <h1 className=\"loginHeader\">Feeding Plants</h1>\r\n        </Link>\r\n      ) : (\r\n        <Link className=\"nomember\" to=\"/\">\r\n          <div>\r\n            <h1 className=\"nomemberHeader1\">Feeding</h1>\r\n            <h1 className=\"nomemberHeader2\">Plants</h1>\r\n          </div>\r\n        </Link>\r\n      )}\r\n    </header>\r\n  );\r\n};\r\nexport default Header;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\r\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport PermIdentityIcon from '@material-ui/icons/PermIdentity';\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\",\r\n    bottom: 0,\r\n    left: 0,\r\n    position: \"fixed\",\r\n    background: \"white\",\r\n    zIndex: 100,\r\n  },\r\n});\r\n\r\nconst Navigation = (props) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [value, setValue] = useState(0);\r\n  const { isLogin } = props;\r\n\r\n  const handleClickInMember = () => {\r\n    if (value === 0) {\r\n      console.log(\"첫번째\");\r\n      history.push(\"/\");\r\n    } else if (value === 1) {\r\n      console.log(\"두번째\");\r\n      history.push('/adding-plants');\r\n    } else if (value === 2) {\r\n      console.log(\"세번째\");\r\n      history.push('/profile');\r\n      \r\n    }\r\n  };\r\n  const handleClickInNomember = () => {\r\n    if (value === 0) {\r\n      console.log(\"첫번째\");\r\n      history.push(\"/\");\r\n    } else if (value === 1) {\r\n      console.log(\"두번째\");\r\n      history.push('/profile');\r\n    }\r\n  }\r\n  useEffect(()=>{\r\n    if(isLogin){\r\n      handleClickInMember();\r\n    }else{\r\n      handleClickInNomember();\r\n    }\r\n    \r\n  },[value])\r\n  return (\r\n    <nav>\r\n      {isLogin ? (\r\n        <BottomNavigation\r\n          value={value}\r\n          onChange={(event, newValue) => {\r\n            setValue(newValue);\r\n          }}\r\n          showLabels\r\n          className={classes.root}\r\n        >\r\n          <BottomNavigationAction\r\n            label=\"Home\"\r\n            icon={<HomeIcon/>}\r\n          />\r\n          <BottomNavigationAction\r\n            label=\"Add Plants\"\r\n            icon={<AddIcon />}\r\n          />\r\n          <BottomNavigationAction\r\n            label=\"Profile\"\r\n            icon={<PermIdentityIcon />}\r\n          />\r\n        </BottomNavigation>\r\n      ) : (\r\n        <BottomNavigation\r\n          value={value}\r\n          onChange={(event, newValue) => {\r\n            setValue(newValue);\r\n          }}\r\n          showLabels\r\n          className={classes.root}\r\n        >\r\n          <BottomNavigationAction\r\n            label=\"Home\"\r\n            icon={<HomeIcon/>}\r\n          />\r\n          <BottomNavigationAction\r\n            label=\"Profile\"\r\n            icon={<PermIdentityIcon />}\r\n          />\r\n        </BottomNavigation>\r\n      )}\r\n    </nav>\r\n  );\r\n};\r\nexport default Navigation;\r\n","import React, { useState } from \"react\";\r\nimport { Route, BrowserRouter, Switch } from \"react-router-dom\";\r\nimport AddingPlants from \"routes/AddingPlants\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Signup from \"routes/Signup\";\r\nimport Header from \"./Header\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nconst MyRouter = () => {\r\n  const [isLogin, setIsLogin] = useState(false);\r\n  return (\r\n    <BrowserRouter>\r\n      <div className=\"initialBlock\">\r\n        <Header isLogin={isLogin} />\r\n        <Navigation isLogin={isLogin} />\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Home isLogin={isLogin} />\r\n          </Route>\r\n          <Route exact path=\"/auth\">\r\n            <Auth />\r\n          </Route>\r\n          <Route exact path=\"/signup\">\r\n            <Signup/>\r\n          </Route>\r\n          <Route exact path=\"/profile\">\r\n            <Profile isLogin={isLogin} />\r\n          </Route>\r\n          <Route exact path=\"/adding-plants\">\r\n            <AddingPlants />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n};\r\nexport default MyRouter;\r\n","import React from \"react\"\nimport MyRouter from \"components/Router\";\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <MyRouter/>\n      <footer>\n        {/* footer css는 index.css에 있음 */}\n        <hr/>\n      <div>&copy; {new Date().getFullYear()} 박백김하</div>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport \"index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}